<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        fZruruij2JAAAAAASUVORK5CYII=
</value>
  </data>
</root>